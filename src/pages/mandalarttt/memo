{
    "statusCode": 200,
    "resultMsg": "만다라트 조회완료",
    "resultData": {
        "project_id": "1",
        "title": "공유한 만다라트 제목",
        "nickName": "주머니",
        "created_at": "2024-12-14",
        "content": "공유 만다라트 내용 블라블라",
        "likeCnt": 5,
        "likeFg": 1,
        "mandalart": [
            {
                "mandalart_id": 0,
                "parent_id" : null,
                "title": "만다라트 명칭",
                "contetnts": "만다라트 내용",
                "completed_fg": 0,
                "depth": 0,
                "start_date": null,
                "finish_date": null,
                "order_id": 0
            },
            {
                "mandalart_id": 1,
                "parent_id" : 0,
                "title": "만다라트 명칭",
                "contetnts": "만다라트 내용",
                "completed_fg": 0,
                "depth": 1,
                "start_date": null,
                "finish_date": null,
                "order_id": 0
            },
            {
                "mandalart_id": 2,
                "parent_id" : 0,
                "title": "만다라트 명칭",
                "contetnts": "만다라트 내용",
                "completed_fg": 0,
                "depth": 1,
                "start_date": null,
                "finish_date": null,
                "order_id": 1
            },
            {
                "mandalart_id": 3,
                "parent_id" : 0,
                "title": "만다라트 명칭",
                "contetnts": "만다라트 내용",
                "completed_fg": 0,
                "depth": 1,
                "start_date": null,
                "finish_date": null,
                "order_id": 2
            }
        ...
        ]
    }
}


const [mandalart, setMandalart] = useState([getGridData]);
const getGridData = [{id:0},{id:1},{id:2},{id:3}]

{ 
    Datavalue: dumyData[2]
    
    id: ""
    
}





 const saveModalData = () => {
    // 9개의 보여지고 있는 데이터를 변경 된 데이터로 변경
    const newShowData = showData.map(item => {
      if (item.cellId === selectData.cellId) {
        return { ...item, ...selectData };
      }
      return item;
    });
    // console.log("newShowData ? ", newShowData);
    // setShowData(newShowData);

    // 원본 데이터 참조
    const originalData = [...normalData];
    // isbindKey 로 연결된 것을 찾아서 변경
    const sortArr = originalData.map(itemOrign => {
      newShowData.map(item => {
        if (item.isbindKey) {
          itemOrign.map(itemNow => {
            if (item.isbindKey === itemNow.cellId) {
              itemNow.title = item.title;
            }
            if (item.cellId === itemNow.cellId) {
              itemNow.title = item.title;
            }
          });
        }
      });

      return itemOrign;
    });

    // 원본 데이터도 변경을 해야 한다.
    setNormalData([...sortArr]);
    const updatednormalData = [...normalData];
    updatednormalData[normalDataIndex] = newShowData;

    // 원본 데이터와 showData 동기화
    setNormalData(updatednormalData);
    setShowData(newShowData);
    patchGridData(showData);
    // 데이터 색
    // console.log(selectData.cellId);
    //console.log(selectDat/a.title);
    setIsModalOpen(false);
  };





{showData?.map((item, index) => (
          <div
            key={index}
            id={item.cellId}
            onClick={() => openModal(item.cellId)}
            className="sub-item"
            style={{
              backgroundColor: `${item.bgcolor}`,
            }}
          >
            {item.title}
          </div>
        ))}